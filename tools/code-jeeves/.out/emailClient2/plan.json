{
  "plan": [
    {
      "functionName": "setupProjectDependencies",
      "task": "Setup project with necessary dependencies.",
      "ext": "sh",
      "declaration": "function setupProjectDependencies()",
      "preferences": "- Use bun to initialize the project and install dependencies such as `mail-listener5`, `nodemailer`, `cmd-ts` for creating command line interfaces, `inquirer` for interactive cli prompts, `zod` for validation, `lodash-es` for utility functions, `dayjs` for date operations, and `jest` for testing.",
      "subTasks": [
        {
          "functionName": "initBunProject",
          "task": "Initiate a new bun project.",
          "ext": "sh",
          "declaration": "function initBunProject()"
        },
        {
          "functionName": "installDependencies",
          "task": "Install necessary npm packages.",
          "ext": "sh",
          "declaration": "function installDependencies()"
        }
      ]
    },
    {
      "functionName": "configureEmailListener",
      "task": "Configure the `mail-listener5` package to listen for incoming emails.",
      "ext": "js",
      "declaration": "function configureEmailListener(config) {}",
      "preferences": "- Utilize environment variables or a separate config file for sensitive information such as email credentials.",
      "subTasks": []
    },
    {
      "functionName": "fetchEmails",
      "task": "Fetch emails from the server.",
      "ext": "js",
      "declaration": "function fetchEmails() {}",
      "preferences": "- This function is triggered by `mail-listener5` events.",
      "subTasks": []
    },
    {
      "functionName": "displayEmailList",
      "task": "Display a list of fetched emails on the command line.",
      "ext": "js",
      "declaration": "function displayEmailList(emails) {}",
      "preferences": "- Use `inquirer` package to allow user to scroll through the list of emails and select one.",
      "subTasks": []
    },
    {
      "functionName": "openSelectedEmail",
      "task": "Open and display the content of the selected email.",
      "ext": "js",
      "declaration": "function openSelectedEmail(email) {}",
      "preferences": "- Use `lodash-es` for any necessary data manipulation.",
      "subTasks": []
    },
    {
      "functionName": "composeEmail",
      "task": "Prompt the user to compose an email.",
      "ext": "js",
      "declaration": "function composeEmail() {}",
      "preferences": "- Use `inquirer` for the input prompts (to, subject, body).",
      "subTasks": []
    },
    {
      "functionName": "sendEmail",
      "task": "Send an email using `nodemailer`.",
      "ext": "js",
      "declaration": "function sendEmail(email:string):Promise<boolean> {}",
      "preferences": "- Validate the email object using `zod` before sending.",
      "subTasks": []
    }
  ]
}
